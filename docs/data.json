{
    "project": {
        "name": "blink-diff",
        "description": "A lightweight image comparison tool",
        "version": "1.0.8"
    },
    "files": {
        "index.js": {
            "name": "index.js",
            "modules": {},
            "classes": {
                "BlinkDiff": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "BlinkDiff": {
            "name": "BlinkDiff",
            "shortname": "BlinkDiff",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "index.js",
            "line": 8,
            "description": "Blink-diff comparison class",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "imageA",
                            "description": "Image object of first image",
                            "type": "PNGImage|Buffer"
                        },
                        {
                            "name": "imageAPath",
                            "description": "Path to first image",
                            "type": "String"
                        },
                        {
                            "name": "imageB",
                            "description": "Image object of second image",
                            "type": "PNGImage|Buffer"
                        },
                        {
                            "name": "imageBPath",
                            "description": "Path to second image",
                            "type": "String"
                        },
                        {
                            "name": "imageOutputPath",
                            "description": "Path to output image file",
                            "type": "String",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "imageOutputLimit",
                            "description": "Determines when an image output is created",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "BlinkDiff.OUTPUT_ALL"
                        },
                        {
                            "name": "thresholdType",
                            "description": "Defines the threshold of the comparison",
                            "type": "String",
                            "optional": true,
                            "optdefault": "BlinkDiff.THRESHOLD_PIXEL"
                        },
                        {
                            "name": "threshold",
                            "description": "Threshold limit according to the comparison limit.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "500"
                        },
                        {
                            "name": "delta",
                            "description": "Distance between the color coordinates in the 4 dimensional color-space that will not trigger a difference.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "20"
                        },
                        {
                            "name": "outputMaskRed",
                            "description": "Value to set for red on difference pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "255"
                        },
                        {
                            "name": "outputMaskGreen",
                            "description": "Value to set for green on difference pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "outputMaskBlue",
                            "description": "Value to set for blue on difference pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "outputMaskAlpha",
                            "description": "Value to set for the alpha channel on difference pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "255"
                        },
                        {
                            "name": "outputMaskOpacity",
                            "description": "Strength of masking the pixel. 1.0 means that the full color will be used; anything less will mix-in the original pixel.",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "0.7"
                        },
                        {
                            "name": "outputShiftRed",
                            "description": "Value to set for red on shifted pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "255"
                        },
                        {
                            "name": "outputShiftGreen",
                            "description": "Value to set for green on shifted pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "165"
                        },
                        {
                            "name": "outputShiftBlue",
                            "description": "Value to set for blue on shifted pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "outputShiftAlpha",
                            "description": "Value to set for the alpha channel on shifted pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "255"
                        },
                        {
                            "name": "outputShiftOpacity",
                            "description": "Strength of masking the shifted pixel. 1.0 means that the full color will be used; anything less will mix-in the original pixel.",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "0.7"
                        },
                        {
                            "name": "outputBackgroundRed",
                            "description": "Value to set for red as background. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "outputBackgroundGreen",
                            "description": "Value to set for green as background. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "outputBackgroundBlue",
                            "description": "Value to set for blue as background. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "outputBackgroundAlpha",
                            "description": "Value to set for the alpha channel as background. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "undefined"
                        },
                        {
                            "name": "outputBackgroundOpacity",
                            "description": "Strength of masking the pixel. 1.0 means that the full color will be used; anything less will mix-in the original pixel.",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "0.6"
                        },
                        {
                            "name": "blockOut",
                            "description": "Object or list of objects with coordinates of blocked-out areas.",
                            "type": "Object|object[]",
                            "optional": true
                        },
                        {
                            "name": "blockOutRed",
                            "description": "Value to set for red on blocked-out pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "blockOutGreen",
                            "description": "Value to set for green on blocked-out pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "blockOutBlue",
                            "description": "Value to set for blue on blocked-out pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "blockOutAlpha",
                            "description": "Value to set for the alpha channel on blocked-out pixel. 'Undefined' will not change the value.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "255"
                        },
                        {
                            "name": "blockOutOpacity",
                            "description": "Strength of masking the blocked-out pixel. 1.0 means that the full color will be used; anything less will mix-in the original pixel.",
                            "type": "Float",
                            "optional": true,
                            "optdefault": "1.0"
                        },
                        {
                            "name": "copyImageAToOutput",
                            "description": "Copies the first image to the output image before the comparison begins. This will make sure that the output image will highlight the differences on the first image.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "copyImageBToOutput",
                            "description": "Copies the second image to the output image before the comparison begins. This will make sure that the output image will highlight the differences on the second image.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "filter",
                            "description": "Filters that will be applied before the comparison. Available filters are: blur, grayScale, lightness, luma, luminosity, sepia",
                            "type": "String[]",
                            "optional": true,
                            "optdefault": "["
                        },
                        {
                            "name": "debug",
                            "description": "When set, then the applied filters will be shown on the output image.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "composition",
                            "description": "Should a composition be created to compare?",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "composeLeftToRight",
                            "description": "Create composition from left to right, otherwise let it decide on its own whats best",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "composeTopToBottom",
                            "description": "Create composition from top to bottom, otherwise let it decide on its own whats best",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "hideShift",
                            "description": "Hides shift highlighting by using the background color instead",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "hShift",
                            "description": "Horizontal shift for possible antialiasing",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "2"
                        },
                        {
                            "name": "vShift",
                            "description": "Vertical shift for possible antialiasing",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "2"
                        },
                        {
                            "name": "cropImageA",
                            "description": "Cropping for first image (default: no cropping)",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "x",
                                    "description": "Coordinate for left corner of cropping region",
                                    "type": "Int",
                                    "optional": true,
                                    "optdefault": "0"
                                },
                                {
                                    "name": "y",
                                    "description": "Coordinate for top corner of cropping region",
                                    "type": "Int",
                                    "optional": true,
                                    "optdefault": "0"
                                },
                                {
                                    "name": "width",
                                    "description": "Width of cropping region (default: Width that is left)",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "height",
                                    "description": "Height of cropping region (default: Height that is left)",
                                    "type": "Int",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "cropImageB",
                            "description": "Cropping for second image (default: no cropping)",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "x",
                                    "description": "Coordinate for left corner of cropping region",
                                    "type": "Int",
                                    "optional": true,
                                    "optdefault": "0"
                                },
                                {
                                    "name": "y",
                                    "description": "Coordinate for top corner of cropping region",
                                    "type": "Int",
                                    "optional": true,
                                    "optdefault": "0"
                                },
                                {
                                    "name": "width",
                                    "description": "Width of cropping region (default: Width that is left)",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "height",
                                    "description": "Height of cropping region (default: Height that is left)",
                                    "type": "Int",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "perceptual",
                            "description": "Turns perceptual comparison on",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "gamma",
                            "description": "Gamma correction for all colors",
                            "type": "Float",
                            "optional": true
                        },
                        {
                            "name": "gammaR",
                            "description": "Gamma correction for red",
                            "type": "Float",
                            "optional": true
                        },
                        {
                            "name": "gammaG",
                            "description": "Gamma correction for green",
                            "type": "Float",
                            "optional": true
                        },
                        {
                            "name": "gammaB",
                            "description": "Gamma correction for blue",
                            "type": "Float",
                            "optional": true
                        }
                    ]
                }
            ],
            "itemtype": "property",
            "type": "PNGImage"
        }
    },
    "classitems": [
        {
            "file": "index.js",
            "line": 218,
            "description": "Version of class",
            "static": 1,
            "itemtype": "property",
            "name": "version",
            "type": "{string}",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 228,
            "description": "Threshold-type for pixel",
            "static": 1,
            "itemtype": "property",
            "name": "THRESHOLD_PIXEL",
            "type": "{string}",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 237,
            "description": "Threshold-type for percent of all pixels",
            "static": 1,
            "itemtype": "property",
            "name": "THRESHOLD_PERCENT",
            "type": "{string}",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 247,
            "description": "Unknown result of the comparison",
            "static": 1,
            "itemtype": "property",
            "name": "RESULT_UNKNOWN",
            "type": "{int}",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 256,
            "description": "The images are too different",
            "static": 1,
            "itemtype": "property",
            "name": "RESULT_DIFFERENT",
            "type": "{int}",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 265,
            "description": "The images are very similar, but still below the threshold",
            "static": 1,
            "itemtype": "property",
            "name": "RESULT_SIMILAR",
            "type": "{int}",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 274,
            "description": "The images are identical (or near identical)",
            "static": 1,
            "itemtype": "property",
            "name": "RESULT_IDENTICAL",
            "type": "{int}",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 284,
            "description": "Create output when images are different",
            "static": 1,
            "itemtype": "property",
            "name": "OUTPUT_DIFFERENT",
            "type": "{int}",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 293,
            "description": "Create output when images are similar or different",
            "static": 1,
            "itemtype": "property",
            "name": "OUTPUT_SIMILAR",
            "type": "{int}",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 302,
            "description": "Force output of all comparisons",
            "static": 1,
            "itemtype": "property",
            "name": "OUTPUT_ALL",
            "type": "{int}",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 314,
            "description": "Runs the comparison with a promise",
            "itemtype": "method",
            "name": "runWithPromise",
            "example": [
                "\n    var blinkDiff = BlinkDiff(...);\n    blinkDiff.runWithPromise().then(function (result) {\n      ...\n    });"
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 329,
            "description": "Runs the comparison in node-style",
            "itemtype": "method",
            "name": "run",
            "example": [
                "\n    var blinkDiff = BlinkDiff(...);\n    blinkDiff.run(function (err, result) {\n      if (err) {\n        throw err;\n      }\n\n      ...\n    });"
            ],
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 475,
            "description": "Determines if result is within the output limit",
            "itemtype": "method",
            "name": "_withinOutputLimit",
            "params": [
                {
                    "name": "resultCode",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "outputLimit",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 488,
            "description": "Converts the result-code to a relative value",
            "itemtype": "method",
            "name": "_convertResultCodeToRelativeValue",
            "params": [
                {
                    "name": "resultCode",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 505,
            "description": "Creates a comparison image",
            "itemtype": "method",
            "name": "_createComposition",
            "params": [
                {
                    "name": "imageA",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "imageB",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "imageOutput",
                    "description": "",
                    "type": "PNGImage"
                }
            ],
            "return": {
                "description": "",
                "type": "PNGImage"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 541,
            "description": "Loads the image or uses the already available image",
            "itemtype": "method",
            "name": "_loadImage",
            "params": [
                {
                    "name": "path",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "",
                    "type": "PNGImage"
                }
            ],
            "return": {
                "description": "",
                "type": "PNGImage|Promise"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 563,
            "description": "Copies one image into another image",
            "itemtype": "method",
            "name": "_copyImage",
            "params": [
                {
                    "name": "imageSrc",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "imageDst",
                    "description": "",
                    "type": "PNGImage"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 576,
            "description": "Is the difference above the set threshold?",
            "itemtype": "method",
            "name": "isAboveThreshold",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "total",
                    "description": "",
                    "type": "Int",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 597,
            "description": "Log method that can be overwritten to modify the logging behavior.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 608,
            "description": "Has comparison passed?",
            "itemtype": "method",
            "name": "hasPassed",
            "params": [
                {
                    "name": "result",
                    "description": "Comparison result-code",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 620,
            "description": "Clips the images to the lower resolution of both",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_clip",
            "params": [
                {
                    "name": "imageA",
                    "description": "Source image",
                    "type": "PNGImage"
                },
                {
                    "name": "imageB",
                    "description": "Destination image",
                    "type": "PNGImage"
                }
            ],
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 651,
            "description": "Crops the source image to the bounds of rect",
            "itemtype": "method",
            "name": "_crop",
            "params": [
                {
                    "name": "which",
                    "description": "Title of image to crop",
                    "type": "String"
                },
                {
                    "name": "image",
                    "description": "Source image",
                    "type": "PNGImage"
                },
                {
                    "name": "rect",
                    "description": "Values for rect",
                    "type": "Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "X value of rect",
                            "type": "Int"
                        },
                        {
                            "name": "y",
                            "description": "Y value of rect",
                            "type": "Int"
                        },
                        {
                            "name": "width",
                            "description": "Width value of rect",
                            "type": "Int"
                        },
                        {
                            "name": "height",
                            "description": "Height value of rect",
                            "type": "Int"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 671,
            "description": "Correcting area dimensions if necessary\n\nNote:\n Priority is on the x/y coordinates, and not on the size since the size will then be removed anyways.",
            "itemtype": "method",
            "name": "_correctDimensions",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "rect",
                    "description": "Values for rect",
                    "type": "Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "X value of rect",
                            "type": "Int"
                        },
                        {
                            "name": "y",
                            "description": "Y value of rect",
                            "type": "Int"
                        },
                        {
                            "name": "width",
                            "description": "Width value of rect",
                            "type": "Int"
                        },
                        {
                            "name": "height",
                            "description": "Height value of rect",
                            "type": "Int"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 709,
            "description": "Calculates the distance of colors in the 4 dimensional color space",
            "itemtype": "method",
            "name": "_colorDelta",
            "params": [
                {
                    "name": "color1",
                    "description": "Values for color 1",
                    "type": "Object",
                    "props": [
                        {
                            "name": "c1",
                            "description": "First value of color 1",
                            "type": "Int"
                        },
                        {
                            "name": "c2",
                            "description": "Second value of color 1",
                            "type": "Int"
                        },
                        {
                            "name": "c3",
                            "description": "Third value of color 1",
                            "type": "Int"
                        },
                        {
                            "name": "c4",
                            "description": "Fourth value of color 1",
                            "type": "Int"
                        }
                    ]
                },
                {
                    "name": "color2",
                    "description": "Values for color 2",
                    "type": "Object",
                    "props": [
                        {
                            "name": "c1",
                            "description": "First value of color 2",
                            "type": "Int"
                        },
                        {
                            "name": "c2",
                            "description": "Second value of color 2",
                            "type": "Int"
                        },
                        {
                            "name": "c3",
                            "description": "Third value of color 2",
                            "type": "Int"
                        },
                        {
                            "name": "c4",
                            "description": "Fourth value of color 2",
                            "type": "Int"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Distance",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 737,
            "description": "Gets the color of an image by the index",
            "itemtype": "method",
            "name": "_getColor",
            "params": [
                {
                    "name": "image",
                    "description": "Image",
                    "type": "PNGImage"
                },
                {
                    "name": "idx",
                    "description": "Index of pixel in image",
                    "type": "Int"
                },
                {
                    "name": "perceptual",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "gamma",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Color",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 765,
            "description": "Correct gamma and return color in [0, 1] range",
            "itemtype": "method",
            "name": "_correctGamma",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "gamma",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "}",
                "type": "C1: number, c2: number, c3: number, c4: number"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 796,
            "description": "Converts the color from RGB to XYZ",
            "itemtype": "method",
            "name": "_convertRgbToXyz",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 815,
            "description": "Converts the color from XYZ to CieLab",
            "itemtype": "method",
            "name": "_convertXyzToCieLab",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 842,
            "description": "Calculates the lower limit",
            "itemtype": "method",
            "name": "_calculateLowerLimit",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "min",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "shift",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 856,
            "description": "Calculates the upper limit",
            "itemtype": "method",
            "name": "_calculateUpperLimit",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "max",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "shift",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 870,
            "description": "Checks if any pixel in the shift surrounding has a comparable color",
            "itemtype": "method",
            "name": "_shiftCompare",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "deltaThreshold",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "imageA",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "imageB",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "hShift",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "vShift",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "perceptual",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "gamma",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Is pixel within delta found in surrounding?",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 925,
            "description": "Does a quick comparison between the supplied images",
            "itemtype": "method",
            "name": "_pixelCompare",
            "params": [
                {
                    "name": "imageA",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "imageB",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "imageOutput",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "deltaThreshold",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "Width of image",
                    "type": "Int"
                },
                {
                    "name": "height",
                    "description": "Height of image",
                    "type": "Int"
                },
                {
                    "name": "outputMaskColor",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "red",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "green",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "blue",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Float",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "outputShiftColor",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "red",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "green",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "blue",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Float",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "backgroundColor",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "red",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "green",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "blue",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Float",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "hShift",
                    "description": "Horizontal shift",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "vShift",
                    "description": "Vertical shift",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "perceptual",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "gamma",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Number of pixel differences",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        },
        {
            "file": "index.js",
            "line": 990,
            "description": "Compares the two images supplied",
            "itemtype": "method",
            "name": "_compare",
            "params": [
                {
                    "name": "imageA",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "imageB",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "imageOutput",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "deltaThreshold",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "outputMaskColor",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "red",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "green",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "blue",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Float",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "outputShiftColor",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "red",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "green",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "blue",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Float",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "backgroundColor",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "red",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "green",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "blue",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "opacity",
                            "description": "",
                            "type": "Float",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "hShift",
                    "description": "Horizontal shift",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "vShift",
                    "description": "Vertical shift",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "perceptual",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "gamma",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "BlinkDiff"
        }
    ],
    "warnings": []
}