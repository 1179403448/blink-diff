{"name":"Blink-diff","tagline":"A lightweight image comparison tool","body":"Blink-Diff\r\n==========\r\n\r\nA lightweight image comparison tool\r\n\r\n[![Build Status](https://secure.travis-ci.org/yahoo/blink-diff.png)](http://travis-ci.org/yahoo/blink-diff)\r\n[![npm version](https://badge.fury.io/js/blink-diff.svg)](http://badge.fury.io/js/blink-diff)\r\n\r\n[![NPM](https://nodei.co/npm/blink-diff.png?downloads=true)](https://nodei.co/npm/blink-diff/)\r\n\r\n\r\n[API-Documentation](http://yahoo.github.io/blink-diff/docs/)\r\n\r\n[Coverage Report](http://yahoo.github.io/blink-diff/coverage/lcov-report/)\r\n\r\n\r\n**Table of Contents**\r\n* [Installation](#installation)\r\n* [Usage](#usage)\r\n    * [Command-Line Usage](#command-line-usage)\r\n    * [Object Usage](#object-usage)\r\n    * [Logging](#logging)\r\n* [Examples](#examples)\r\n* [Results](#results)\r\n* [API-Documentation](#api-documentation)\r\n* [Tests](#tests)\r\n* [Project Naming](#project-naming)\r\n* [Third-party libraries](#third-party-libraries)\r\n* [License](#license)\r\n\r\n\r\n##Installation\r\n\r\nInstall this module with the following command:\r\n```shell\r\nnpm install blink-diff\r\n```\r\n\r\nAdd the module to your ```package.json``` dependencies:\r\n```shell\r\nnpm install --save blink-diff\r\n```\r\nAdd the module to your ```package.json``` dev-dependencies:\r\n```shell\r\nnpm install --save-dev blink-diff\r\n```\r\n\r\n##Usage\r\n\r\nThe package can be used in two different ways:\r\n * per command line\r\n * through an object\r\n\r\n###Command-Line usage\r\n\r\nThe command-line tool can be found in the ```bin``` directory. You can run the application with\r\n\r\n```shell\r\nblink-diff --output <output>.png <image1>.png <image2>.png\r\n```\r\nUse ```image1``` and ```image2``` as the images you want to compare.\r\nOnly PNGs are supported at this point.\r\n\r\n\r\nThe command-line tool exposes a couple of flags and parameters for the comparison:\r\n```shell\r\n--verbose           Turn on verbose mode\r\n--threshold p       Number of pixels/percent 'p' below which differences are ignored\r\n--threshold-type t  'pixel' and 'percent' as type of threshold. (default: pixel)\r\n--delta p           Max. distance colors in the 4 dimensional color-space without triggering a difference. (default: 20)\r\n--copyImageA        Copies first image to output as base. (default: true)\r\n--copyImageB        Copies second image to output as base.\r\n--no-copy           Doesn't copy anything to output as base.\r\n--output o          Write difference to the file 'o'\r\n--filter f          Filters f (separated with comma) that will be applied before the comparison.\r\n--no-composition    Turns the composition feature off\r\n--compose-ltr       Compose output image from left to right\r\n--compose-ttb       Compose output image from top to bottom\r\n--hide-shift        Hides shift highlighting (default: false)\r\n--h-shift           Acceptable horizontal shift of pixel. (default: 0)\r\n--v-shift           Acceptable vertical shift of pixel. (default: 0)\r\n--version           Print version\r\n--help              This help\r\n```\r\n\r\n\r\n###Object usage\r\n\r\nThe package can also be used directly in code, without going through the command-line.\r\n\r\n**Example:**\r\n```javascript\r\nvar diff = new BlinkDiff({\r\n    imageAPath: 'path/to/first/image', // Use file-path\r\n    imageBPath: 'path/to/second/image',\r\n\r\n    thresholdType: BlinkDiff.THRESHOLD_PERCENT,\r\n    threshold: 0.01,\r\n\r\n    outputPath: 'path/to/output/image'\r\n});\r\n\r\ndiff.run(function (error) {\r\n    console.log(error ? 'Failed' : 'Passed');\r\n});\r\n```\r\n\r\nAll the parameters that were available in the command-line tool are also available through the class constructor, however they might use slightly different wording. The class exposes additional parameters that are not available from the command-line:\r\n* ```imageAPath``` Defines the path to the first image that should be compared (required; imageAPath or imageA is required - see example below)\r\n* ```imageA``` Supplies first image that should be compared (required; imageAPath or imageA is required - see example below)\r\n* ```imageBPath``` Defines the path to the second image that should be compared (required; imageBPath or imageB is required - see example below)\r\n* ```imageB``` Supplies second image that should be compared (required; imageBPath or imageB is required - see example below)\r\n* ```imageOutputPath``` Defines the path to the output-file. If you leaves this one off, then this feature is turned-off.\r\n* ```verbose``` Verbose output (default: false)\r\n* ```thresholdType``` Type of threshold check. This can be BlinkDiff.THRESHOLD_PIXEL and BlinkDiff.THRESHOLD_PERCENT (default: BlinkDiff.THRESHOLD_PIXEL)\r\n* ```threshold``` Number of pixels/percent p below which differences are ignored (default: 500)\r\n* ```delta``` Distance between the color coordinates in the 4 dimensional color-space that will not trigger a difference. (default: 20)\r\n* ```outputMaskRed``` Red intensity for the difference highlighting in the output file (default: 255)\r\n* ```outputMaskGreen``` Green intensity for the difference highlighting in the output file (default: 0)\r\n* ```outputMaskBlue``` Blue intensity for the difference highlighting in the output file (default: 0)\r\n* ```outputMaskAlpha``` Alpha intensity for the difference highlighting in the output file (default: 255)\r\n* ```outputMaskOpacity``` Opacity of the pixel for the difference highlighting in the output file (default: 0.7 - slightly transparent)\r\n* ```outputShiftRed``` Red intensity for the shift highlighting in the output file (default: 255)\r\n* ```outputShiftGreen``` Green intensity for the shift highlighting in the output file (default: 165)\r\n* ```outputShiftBlue``` Blue intensity for the shift highlighting in the output file (default: 0)\r\n* ```outputShiftAlpha``` Alpha intensity for the shift highlighting in the output file (default: 255)\r\n* ```outputShiftOpacity``` Opacity of the pixel for the shift highlighting in the output file (default: 0.7 - slightly transparent)\r\n* ```outputBackgroundRed``` Red intensity for the background in the output file (default: 0)\r\n* ```outputBackgroundGreen``` Green intensity for the background in the output file (default: 0)\r\n* ```outputBackgroundBlue``` Blue intensity for the background in the output file (default: 0)\r\n* ```outputBackgroundAlpha``` Alpha intensity for the background in the output file (default: undefined)\r\n* ```outputMaskOpacity``` Opacity of the pixel for the background in the output file (default: 0.6 - transparent)\r\n* ```copyImageAToOutput``` Copies the first image to the output image before the comparison begins. This will make sure that the output image will highlight the differences on the first image. (default)\r\n* ```copyImageBToOutput``` Copies the second image to the output image before the comparison begins. This will make sure that the output image will highlight the differences on the second image.\r\n* ```filter``` Filters that will be applied before the comparison. Available filters are: blur, grayScale, lightness, luma, luminosity, sepia\r\n* ```debug``` When set, then the applied filters will be shown on the output image. (default: false)\r\n* ```createComparison``` Creates a composition of all three images as output (default: true)\r\n* ```compareLeftToRight``` Creates comparison-composition from left to right, otherwise it lets decide the app on what is best\r\n* ```compareTopToBottom``` Creates comparison-composition from top to bottom, otherwise it lets decide the app on what is best\r\n* ```hShift``` Horizontal shift for possible antialiasing (default: 2) Set to 0 to turn this off.\r\n* ```vShift``` Vertical shift for possible antialiasing (default: 2) Set to 0 to turn this off.\r\n* ```hideShift``` Uses the background color for \"highlighting\" shifts. (default: false)\r\n\r\n**Example:**\r\n```javascript\r\nvar firstImage = PNGImage.readImage('path/to/first/image', function (err) {\r\n\r\n  if (err) {\r\n    throw err;\r\n  }\r\n\r\n  var diff = new BlinkDiff({\r\n      imageA: srcImage, // Use already loaded image for first image\r\n      imageBPath: 'path/to/second/image', // Use file-path to select image\r\n\r\n      delta: 50, // Make comparison more tolerant\r\n      \r\n      outputMaskRed: 0,\r\n      outputMaskBlue: 255, // Use blue for highlighting differences\r\n      \r\n      hideShift: true // Hide anti-aliasing differences - will still determine but not showing it\r\n\r\n      outputPath: 'path/to/output/image'\r\n  });\r\n\r\n  diff.run(function (error) {\r\n      console.log(error ? 'Failed' : 'Passed');\r\n  });\r\n});\r\n```\r\n\r\n####Logging\r\n\r\nBy default, the logger doesn't log events anywhere, but you can change this behavior by overwriting ```blinkDiff.log```:\r\n\r\n```javascript\r\nvar blinkDiff = new BlinkDiff({\r\n    ...\r\n});\r\n\r\nblinkDiff.log = function (text) {\r\n    // Do whatever you want to do\r\n};\r\n\r\n...\r\n```\r\n\r\n\r\n##Examples\r\n\r\nThere are some examples in the ```examples``` folder, in which I used screenshots of YDN to check for visual regressions (and made some manual modifications to the dom to make differences appear ;-)).\r\nYou can find examples for:\r\n* Color changes in ```YDN_Color```\r\n* Missing DOM elements in ```YDN_Missing``` (including some anti-aliasing)\r\n* Multiple differences in ```YDN_Multi```\r\n* Disrupted sorting in ```YDN_Sort```\r\n* Swapped items in ```YDN_Swap```\r\n* Text capitalization in ```YDN_Upper```\r\n\r\nAll screenshots were compared to ```YDN.png```, a previously approved screenshot without a regression.\r\nEach of the regression has the screenshot and the output result, highlighting the differences.\r\n\r\n##Results\r\n![Conversion](https://raw.githubusercontent.com/yahoo/blink-diff/master/images/conversion.png)\r\n\r\n##API-Documentation\r\n\r\nGenerate the documentation with following command:\r\n```shell\r\nnpm run docs\r\n```\r\nThe documentation will be generated in the ```docs``` folder of the module root.\r\n\r\n##Tests\r\n\r\nRun the tests with the following command:\r\n```shell\r\nnpm run test\r\n```\r\nThe code-coverage will be written to the ```coverage``` folder in the module root.\r\n\r\n\r\n##Project Naming\r\nThe name comes from the Blink comparator that was used in Astronomy to recognize differences in multiple photos, taking a picture of the same area in the sky over consecutive days, months, or years. Most notably, it was used to discover Pluto.\r\n\r\n##Third-party libraries\r\n\r\nThe following third-party libraries are used by this module:\r\n\r\n###Dependencies\r\n* promise: https://github.com/then/promise\r\n* pngjs-image: https://github.com/yahoo/pngjs-image\r\n\r\n###Dev-Dependencies\r\n* chai: http://chaijs.com\r\n* istanbul: https://github.com/gotwarlost/istanbul\r\n* mocha: https://github.com/visionmedia/mocha\r\n* yuidocjs: https://github.com/yui/yuidoc\r\n\r\n##License\r\n\r\nThe MIT License\r\n\r\nCopyright 2014 Yahoo Inc.\r\n","google":"UA-56408730-8","note":"Don't delete this file! It's used internally to help with page regeneration."}